;;-*-coding: emacs-mule;-*-
(define-abbrev-table 'ack-mode-abbrev-table '(
    ))

(define-abbrev-table 'apropos-mode-abbrev-table '(
    ))

(define-abbrev-table 'awk-mode-abbrev-table '(
    ))

(define-abbrev-table 'c++-mode-abbrev-table '(
    ))

(define-abbrev-table 'c-mode-abbrev-table '(
    ))

(define-abbrev-table 'change-log-mode-abbrev-table '(
    ))

(define-abbrev-table 'comint-mode-abbrev-table '(
    ))

(define-abbrev-table 'diff-mode-abbrev-table '(
    ))

(define-abbrev-table 'fundamental-mode-abbrev-table '(
    ("headingx" "" msf-abbrev-generatedfunc-nxml-mode-headingx 0)
    ("icodex" "" msf-abbrev-generatedfunc-nxml-mode-icodex 0)
    ("ifigx" "" msf-abbrev-generatedfunc-nxml-mode-ifigx 0)
    ("ilistingx" "" msf-abbrev-generatedfunc-nxml-mode-ilistingx 0)
    ("incodex" "" msf-abbrev-generatedfunc-nxml-mode-incodex 0)
    ("ipx" "" msf-abbrev-generatedfunc-nxml-mode-ipx 0)
    ("seeresourcesx" "(see <a href=\"#resources\">Resources</a>)" nil 4)
    ))

(define-abbrev-table 'global-abbrev-table '(
    ("tvelx" "" msf-abbrev-generatedfunc-global-tvelx 0)
    ("tvmx" "" msf-abbrev-generatedfunc-global-tvmx 0)
    ("tvx" "" msf-abbrev-generatedfunc-global-tvx 0)
    ))

(define-abbrev-table 'html-helper-mode-abbrev-table '(
    ("mechanicsx" "<b>Productive Programmer: Mechanics </b><i>[<a href=\"http://github.com/nealford/presentations\">slides</a>]</i>" nil 1)
    ("nfjsx" "" msf-abbrev-generatedfunc-html-mode-nfjsx 0)
    ("slidex" "" msf-abbrev-generatedfunc-html-mode-slidex 0)
    ("upconfx" "" msf-abbrev-generatedfunc-html-mode-upconfx 0)
    ))

(define-abbrev-table 'html-mode-abbrev-table '(
    ("10waysx" "<span style=\"font-weight: bold;\">10 Ways to Improve Your Code</span>&nbsp;<span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\"><i>samples</i></a>]</span>" nil 2)
    ("advdslx" "<b>Advanced DSLs in Ruby</b>&nbsp;<i>[<a href=\"http://github.com/nealford/presentations\">slides]</i></a>" nil 1)
    ("communicationsx" "<b>Communication Skills for Geeks</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 1)
    ("dslx" "<b>Pragmatic Domain Specific Languages</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 2)
    ("emergentx" "<b>Emergent Design &amp; Evolutionary Architecture</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 3)
    ("handsonx" "<b>Hands-on Agile Development</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 2)
    ("jrubyx" "<span style=\"font-weight: bold;\">Introduction to JRuby </span><span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">samples</a>]</span>" nil 2)
    ("lamx" "<b>Keynote: On the Lam from the Furniture Police</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 1)
    ("mechanicsx" "<span style=\"font-weight: bold;\">Productive Programmer: Mechanices </span><span style=\"font-style: italic;\">[<a href=\"Neal_Ford-Productive_Programmer_-_Mechanics.zip\">slides</a>]</span>" nil 6)
    ("metax" "<span style=\"font-weight: bold;\">Meta-programming /J?Ruby/</span>&nbsp;<span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">samples</a>]</span>" nil 2)
    ("metricsx" "<span style=\"font-weight: bold;\">Metrics Driven Agile Development</span> <span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">samples</a>]</span>" nil 2)
    ("minglex" "<span style=\"font-weight: bold;\">Agile Project Management (featuring Mingle)</span> <span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">handouts</a>] [<a href=\"http://github.com/nealford/presentations\">samples</a>]</span>	" nil 1)
    ("nfjsx" "" msf-abbrev-generatedfunc-html-mode-nfjsx 0)
    ("patternsx" "<span style=\"font-weight: bold;\">\"Design Patterns\" in Dynamic Languages</span> <span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">slides</a>]</span>" nil 5)
    ("pragxpx" "<span style=\"font-weight: bold;\">Pragmatic eXtreme Programming</span> <span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">slides</a>]</span>" nil 1)
    ("punchlistx" "<span style=\"font-weight: bold;\">Web Punchlist: Making Your Web Applications Suck Less</span>&nbsp;<span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">handouts</a>]</span>" nil 2)
    ("railslargex" "<b>Rails in the Large - Building the World's Biggest Rails App (Neal Ford and Paul Gross)</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations/\">slides</a></i>]" nil 1)
    ("regexx" "<span style=\"font-weight: bold;\">Regular Expressions in Java</span> <span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">samples</a>]</span>" nil 2)
    ("rwrx" "<b>Real-World Refactoring</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 4)
    ("slidex" "" msf-abbrev-generatedfunc-html-mode-slidex 1)
    ("smithyingx" "<b>Keynote: Smithying in the 21st Century</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</i>]" nil 1)
    ("soax" "<span style=\"font-weight: bold;\">Evolutionary SOA</span>&nbsp;<span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">handouts</a>]</span>" nil 3)
    ("tddx" "<span style=\"font-weight: bold;\">Test Driven Design</span>&nbsp;<span style=\"font-style: italic;\">[<a href=\"http://github.com/nealford/presentations\">samples</a>]</span>" nil 6)
    ("unittestingx" "<b>Unit Testing that Sucks Less: Small Things that Make a Big Difference</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 1)
    ("upconfx" "" msf-abbrev-generatedfunc-html-mode-upconfx 0)
    ("visx" "<b>Visualizations for Code Metrics</b>&nbsp;[<i><a href=\"http://github.com/nealford/presentations\">slides</a></i>]" nil 1)
    ))

(define-abbrev-table 'idl-mode-abbrev-table '(
    ))

(define-abbrev-table 'java-mode-abbrev-table '(
    ))

(define-abbrev-table 'lisp-mode-abbrev-table '(
    ))

(define-abbrev-table 'log-edit-mode-abbrev-table '(
    ))

(define-abbrev-table 'magit-log-edit-mode-abbrev-table '(
    ))

(define-abbrev-table 'markdown-mode-abbrev-table '(
    ))

(define-abbrev-table 'message-mode-abbrev-table '(
    ))

(define-abbrev-table 'muse-mode-abbrev-table '(
    ))

(define-abbrev-table 'objc-mode-abbrev-table '(
    ))

(define-abbrev-table 'outline-mode-abbrev-table '(
    ))

(define-abbrev-table 'pike-mode-abbrev-table '(
    ))

(define-abbrev-table 'ruby-mode-abbrev-table '(
    ("ase" "assert_equal " nil 3)
    ("rw" "attr_accessor " nil 1)
    ))

(define-abbrev-table 'select-tags-table-mode-abbrev-table '(
    ))

(define-abbrev-table 'sgml-mode-abbrev-table '(
    ))

(define-abbrev-table 'shell-mode-abbrev-table '(
    ))

(define-abbrev-table 'text-mode-abbrev-table '(
    ))

(define-abbrev-table 'vc-annotate-mode-abbrev-table '(
    ))

(define-abbrev-table 'vc-dired-mode-abbrev-table '(
    ))

(define-abbrev-table 'vc-git-log-view-mode-abbrev-table '(
    ))

